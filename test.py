from dynamic_parser import DynamicParser, pretty_print_compact

if __name__ == "__main__":
    # This is the byte array for the 'info' object you provided
    info_byte_array = bytearray(b'"\x10<\x7f\x01\x04info\x02\x02ID"\x8c6\x17\x02\tValidFrom\x07\x00\xd91}`\xc1\x00\x00\x01\tLastGames\x01\x010\x02\x06Number\x8589303\x02\x04Draw0\x00\x01\x011\x08\x8589302\t!\x00\x01\x012\x08\x8589301\t3\x00\x01\x013\x08\x8589300\t\x18\x00\x01\x014\x08\x8589299\t7\x00\x01\x015\x08\x8589298\t2\x00\x00\x01\x03Hot\x07\t \x1a\x02\x04Hits:\x00\n\t \x11\x10:\x00\x0b\t0\x10:\x00\x0c\t !\x109\x00\r\t6\x109\x00\x00\x01\x04Cold\x07\t #\x102\x00\n\t "\x102\x00\x0b\t \x1f\x102\x00\x0c\t8\x102\x00\r\t \x1b\x101\x00\x00\x01\x04Hits\x07\x10:\x00\x07\x10:\x00\n\x105\x00\x0b\x109\x00\x0c\x105\x00\r\x108\x00\x0e\x105\x00\x01\x016\x109\x00\x01\x017\x104\x00\x01\x018\x102\x00\x01\x019\x106\x00\x01\x0210\x105\x00\x01\x0211\x103\x00\x01\x0212\x103\x00\x01\x0213\x104\x00\x01\x0214\x106\x00\x01\x0215\x104\x00\x01\x0216\x104\x00\x01\x0217\x10:\x00\x01\x0218\x104\x00\x01\x0219\x107\x00\x01\x0220\x108\x00\x01\x0221\x105\x00\x01\x0222\x106\x00\x01\x0223\x107\x00\x01\x0224\x105\x00\x01\x0225\x103\x00\x01\x0226\x10:\x00\x01\x0227\x101\x00\x01\x0228\x108\x00\x01\x0229\x104\x00\x01\x0230\x104\x00\x01\x0231\x102\x00\x01\x0232\x105\x00\x01\x0233\x109\x00\x01\x0234\x102\x00\x01\x0235\x102\x00\x01\x0236\x106\x00\x01\x02Lo\x10 `\x00\x01\x02Hi\x10 ^\x00\x01\x03Odd\x10 V\x00\x01\x04Even\x10 r\x00\x01\x05Black\x10 l\x00\x01\x03Red\x10 R\x00\x01\x041-12\x10 @\x00\x01\x0513-24\x10 F\x00\x01\x0525-36\x10 8\x00\x01\x07Sector1\x10 &\x00\x01\x07Sector2\x10 \x1d\x00\x01\x07Sector3\x10 \x1b\x00\x01\x07Sector4\x10 $\x00\x01\x07Sector5\x10 \x1c\x00\x01\x07Sector6\x10  \x00\x00\x01\x0fPreviousResults\x00\x00')
    
    # The byte array seems to start with a message header that we can strip for this test
    # The actual 'info' object starts with \x01\x04info...
    # Let's find the start of the object
    start_index = info_byte_array.find(b'\x01\x04info')
    if start_index != -1:
        # We need to adjust the start index to account for the initial bytes that are not part of the object
        parser = DynamicParser(info_byte_array[start_index:])
        parsed_data = parser.parse()
        pretty_print_compact(parsed_data)
    else:
        print("Could not find the start of the 'info' object in the byte array.")
